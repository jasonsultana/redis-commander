@inject IConnectionRepository ConnectionRepository

@if (ConnectionId.HasValue)
{
    <h3>Edit Connection</h3>
}
else
{
    <h3>New Connection</h3>
}

<section>
    <EditForm Model="Connection">
        @if (ConnectionId.HasValue)
        {
            <div class="form-group row">
                <div class="col-12">
                    <label class="form-label">
                        Connection: @ConnectionId
                    </label>
                </div>
            </div>
        }

        <div class="form-group row">
            <div class="col-12">
                <label class="form-label">@nameof(Connection.Name)</label>
                <InputText class="form-control" @bind-Value="Connection.Name"></InputText>
            </div>
        </div>

        <div class="form-group row">
            <div class="col-12">
                <label class="form-label">@nameof(Connection.HostUrl)</label>
                <InputText class="form-control" @bind-Value="Connection.HostUrl"></InputText>
            </div>
        </div>

        <div class="form-group row">
            <div class="col-12">
                <label class="form-label">@nameof(Connection.Port)</label>
                <InputNumber class="form-control" @bind-Value="Connection.Port"></InputNumber>
            </div>
        </div>

        <div class="form-group row">
            <div class="col-12">
                <label class="form-label">@nameof(Connection.User)</label>
                <InputText class="form-control" @bind-Value="Connection.User"></InputText>
            </div>
        </div>

        <div class="form-group row">
            <div class="col-12">
                <label class="form-label">@nameof(Connection.Pass)</label>
                <input class="form-control" type="password" @bind="Connection.Pass" />
            </div>
        </div>

        <div class="form-group row">
            <div class="col-12">
                <InputCheckbox @bind-Value="Connection.UseSSL"></InputCheckbox>
                &nbsp;@nameof(Connection.UseSSL)
            </div>
        </div>
    </EditForm>
</section>

@code {
    [Parameter]
    public int? ConnectionId { get; set; }

    public Connection Connection { get; set; } = new Connection();

    protected override async Task OnInitializedAsync()
    {
        if (ConnectionId.HasValue)
        {
            Connection = await ConnectionRepository.GetAsync(ConnectionId.Value);
        }

        await base.OnInitializedAsync();
    }
}