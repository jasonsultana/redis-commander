@page "/connections"
@inject IConnectionRepository _connectionRepository
@inject ConnectionState AppState;

<div class="row">
    <div class="col-3 item-list">
        <h5 style="display: inline-block;">Connections</h5>
        <button class="btn btn-link" style="display: inline-block;" title="Add a connection" @onclick="AddConnection">
            <span class="oi oi-document"></span>
        </button>

        @if (!_connections.Any())
        {
            <p>No connections found.</p>
        }
        else
        {
            <ul class="list-group">
                @foreach (var connection in _connections)
                {
                    <li class="list-group-item"><a style="cursor: pointer; color: black;" @onclick="() => EditConnection2(connection.Id)">@connection.Name</a></li>
                }
            </ul>
        }
    </div>

    <div class="col-6">
        <EditConnection></EditConnection>
    </div>
</div>

@code {
    private ListConnectionsDto[] _connections = Array.Empty<ListConnectionsDto>();

    protected override async Task OnInitializedAsync()
    {
        _connections = await _connectionRepository.ListConnectionsAsync();

        await base.OnInitializedAsync();
    }

    private async Task AddConnection()
    {
        this.AppState.ConnectionId = null;
    }

    private async Task EditConnection2(int connectionId)
    {
        this.AppState.ConnectionId = connectionId; 
    }
}

<style>
    .item-list {
        height: 100vh;
        color: white;
        background-color: rgb(39 39 39);

        /*
        background-color: #485461;
        background-image: linear-gradient(315deg, #485461 0%, #28313b 74%);
        */
    }
</style>
